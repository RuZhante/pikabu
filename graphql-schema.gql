# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DeleteResultModel {
  affected: Float
}

type UserModel {
  """Id of the user"""
  id: Int!

  """Username of the user"""
  username: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

type AccessTokenModel {
  """Access Token"""
  access_token: String!
}

type LikePostModel {
  """Id of the Like"""
  id: Int!

  """UserId of the Like"""
  userId: Int!

  """PostId of the Like"""
  postId: Int!
}

type CommentModel {
  """Id of the comment"""
  id: Int!

  """Text of the comment"""
  text: String!

  """Image of the comment"""
  image: String

  """PostId of the comment"""
  postId: Int!

  """UserId of the comment"""
  userId: Int!

  """Date of the comment created"""
  createdAt: DateTime!

  """Date of the comment updated"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PostModel {
  """Id of the Post"""
  id: Int!

  """Title of the Post"""
  title: String!

  """Description of the Post"""
  description: String!

  """Image of the Post"""
  image: String

  """Tag of the Post"""
  tag: Int

  """UserId of the Post"""
  userId: Int!

  """Count Likes of the Post"""
  countLikes: Int

  """Date of the Post created"""
  createdAt: DateTime!

  """Date of the Post updated"""
  updatedAt: DateTime!
}

type Query {
  users: [UserModel!]!
  user(id: Int!): UserModel!
  loginUser(loginUserDto: LoginUserDto!): AccessTokenModel!
  posts: [PostModel!]!
  post(id: Int!): PostModel!
  postPagination(postPaginationDto: PostPaginationDto!): [PostModel!]!
  comments: [CommentModel!]!
  comment(id: Int!): CommentModel!
  commentPagination(commentPaginationDto: CommentPaginationDto!): [CommentModel!]!
}

input LoginUserDto {
  """Username of the user"""
  username: String!

  """Username of the user"""
  password: String!
}

input PostPaginationDto {
  """OFFSET and LIMIT"""
  pagination: PaginationDto!

  """Title of the post"""
  title: String
}

input PaginationDto {
  """OFFSET"""
  skip: Int!

  """LIMIT"""
  take: Int!
}

input CommentPaginationDto {
  """OFFSET and LIMIT"""
  pagination: PaginationDto!

  """PostId of the comment"""
  postId: Int!
}

type Mutation {
  createUser(createUserDto: CreateUserDto!): UserModel!
  updateUser(updateUserDto: UpdateUserDto!): UserModel!
  removeUser(id: Int!): DeleteResultModel!
  createPost(createPostDto: CreatePostDto!): PostModel!
  updatePost(updatePostDto: UpdatePostDto!): PostModel!
  removePost(id: Int!): DeleteResultModel!
  createComment(createCommentDto: CreateCommentDto!): CommentModel!
  updateComment(updateCommentDto: UpdateCommentDto!): CommentModel!
  removeComment(id: Int!): DeleteResultModel!
  likePost(id: Int!): LikePostModel!
}

input CreateUserDto {
  """Username of the user"""
  username: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

input UpdateUserDto {
  """Username of the user"""
  username: String

  """Email of the user"""
  email: String

  """Password of the user"""
  password: String
  id: Int!
}

input CreatePostDto {
  """Title of the post"""
  title: String!

  """Description of the post"""
  description: String!

  """Image of the post"""
  image: String
}

input UpdatePostDto {
  """Title of the post"""
  title: String

  """Description of the post"""
  description: String

  """Image of the post"""
  image: String
  id: Int!
}

input CreateCommentDto {
  """Text of the comment"""
  text: String!

  """Image of the comment"""
  image: String

  """PostId of the comment"""
  postId: Int!
}

input UpdateCommentDto {
  """Text of the comment"""
  text: String

  """Image of the comment"""
  image: String

  """PostId of the comment"""
  postId: Int

  """Id of the comment"""
  id: Int!
}
